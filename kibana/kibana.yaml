apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kibana
  labels:
    app: kibana
spec:
  ports:
    - name: http
      port: 80
      targetPort: 5601
  selector:
    app: kibana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: kibana
  labels:
    app: kibana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.3.2
        resources:
          limits:
            cpu: 1000m
          requests:
            cpu: 100m
        env:
          - name: ELASTICSEARCH_HOSTS
            valueFrom:
              configMapKeyRef:
                name: kibana-config
                key: ELASTICSEARCH_HOSTS
#          - name: SERVER_NAME
#            valueFrom:
#              configMapKeyRef:
#                name: kibana-config
#                key: SERVER_NAME
          - name: ELASTICSEARCH_USERNAME
            valueFrom:
              configMapKeyRef:
                name: kibana-config
                key: ELASTICSEARCH_USERNAME
          - name: ELASTICSEARCH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: kibana-credentials
                key: ELASTICSEARCH_PASSWORD
        ports:
          - containerPort: 5601
            name: http
            protocol: TCP
        volumeMounts:
          - name: elastic-certificate-pem
            mountPath: /usr/share/kibana/config/certs
          - name: kibana-yml
            mountPath: /usr/share/kibana/config/kibana.yml
            subPath: kibana.yml

      volumes:
        - name: elastic-certificate-pem
          secret:
            secretName: elastic-certificate-pem
        - name: kibana-yml
          configMap:
            name: kibana-config
            items:
              - key: kibana.yml
                path: kibana.yml
